#!/usr/bin/env bash

set -eux

PATH="$PATH":/usr/local/bin
BUNDLER_PATH=.bundle/gems
IS_NIGHTLY="${IS_NIGHTLY:-false}"

function build_and_test_image() {
  local container_name="$1"
  local container_version="$2"

  : ===
  : === run linter on the docker files
  : ===
   bundle exec puppet-docker local-lint "$container_name" --dockerfile "$dockerfile"

  : ===
  : === build and test $container_name
  : ===
  bundle exec puppet-docker build "$container_name" --no-cache --repository puppet --version "$container_version" --dockerfile "$dockerfile" --no-latest
  bundle exec puppet-docker spec "$container_name" --image "puppet/$container_name:$container_version"
}

function push_image() {
  local container_name="$1"
  local container_version="$2"
  : ===
  : === push $container_name
  : ===
  bundle exec puppet-docker push "$container_name" --repository puppet --version "$container_version" --dockerfile "$dockerfile" --no-latest
}

function get_version() {
  local version='puppet6-nightly'
  if [[ "$IS_NIGHTLY" == 'false' ]]; then
    : ===
    : === If we do not git pull --unshallow we get really weird results with git describe
    : ===
    git pull --unshallow

    : ===
    : === make sure we fetch tags for versioning
    : ===
    git fetch origin 'refs/tags/*:refs/tags/*'
    local git_describe=`git describe`
    local version="${git_describe%%-*}"
  fi
  echo "$version"
}

function get_dockerfile() {
  local dockerfile='Dockerfile.nightly'
  if [[ "$IS_NIGHTLY" == 'false' ]]; then
    local dockerfile='Dockerfile'
  fi
  echo "$dockerfile"
}
: ===
: === bundle install to get ready
: ===
bundle install --path "$BUNDLER_PATH"

version="$(get_version)"
dockerfile="$(get_dockerfile)"
postgres_version="9.6.8"

: ===
: === pull updated base images
: ===
bundle exec puppet-docker update-base-images ubuntu:16.04 postgres:9.6.8

: ===
: === build, test, and push puppetdb
: ===
build_and_test_image puppetdb "$version"
push_image puppetdb "$version"

: ===
: === there are no nightly changes relevant for postgres
: ===
if [[ "$IS_NIGHTLY" == 'false' ]]; then
  build_and_test_image puppetdb-postgres "$postgres_version"
  push_image puppetdb-postgres "$postgres_version"
fi

: ===
: === SUCCESS
: ===
